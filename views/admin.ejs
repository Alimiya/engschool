<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .scrollable-table-wrapper {
            overflow-x: auto
        }

        .scrollable-table {
            width: 100%
        }
    </style>
</head>
<body>
<div class="container mt-4">
    <div class="input-group mb-3">
        <input id="searchNameInput" type="text" class="form-control" placeholder="Search by name">
    </div>

    <div class="input-group mb-3">
        <select id="categorySelect" class="form-select">
            <option value="manager">Manager</option>
            <option value="teacher">Teacher</option>
            <option value="class">Class</option>
        </select>
    </div>

    <div class="input-group mb-2">
        <select id="statusSelect" class="form-select">
            <option value="all">All</option>
            <option value="blocked">Blocked</option>
            <option value="unblocked">Unblocked</option>
        </select>
    </div>

    <div id="classOptions" class="mb-3" style="display: none">
        <select id="classStatusSelect" class="form-select mb-3">
            <option value="all">All</option>
            <option value="blocked">Blocked</option>
            <option value="unblocked">Unblocked</option>
        </select>
        <select id="paymentStatusSelect" class="form-select mb-3">
            <option value="all">All</option>
            <option value="paid">Paid</option>
            <option value="non-paid">Non-paid</option>
        </select>
    </div>
        <button class="btn btn-primary mt-2" onclick="window.location.href='/admin/manager/create'">Create Manager</button>
        <button class="btn btn-primary mt-2" onclick="window.location.href='/admin/teacher/create'">Create Teacher</button>
        <button class="btn btn-primary mt-2" onclick="window.location.href='/admin/student/add/:id'">Add Student</button>
</div>
<div class="container mt-4">
    <div class="scrollable-table-wrapper">
        <table class="table table-striped scrollable-table" id="managerTable">
            <thead>
            <tr class="text-center">
                <th scope="col">Full Name</th>
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
            </thead>
            <tbody id="managerTableBody">
            </tbody>
        </table>

        <table class="table table-striped scrollable-table" id="teacherTable" style="display: none">
            <thead>
            <tr>
                <th scope="col">Full Name</th>
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
            </thead>
            <tbody id="teacherTableBody">
            </tbody>
        </table>

        <table class="table table-striped scrollable-table" id="studentTable" style="display: none">
            <thead>
            <tr>
                <th scope="col">Full Name</th>
                <th scope="col">Status</th>
                <th scope="col">Payment</th>
                <th scope="col">Action</th>
            </tr>
            </thead>
            <tbody id="studentTableBody">
            </tbody>
        </table>
    </div>
</div>

<script>
    async function getManagers() {
        const response = await axios.get('http://localhost:3000/api/admin/managers')
        const managersData = response.data.managers

        const managerTableBody = document.getElementById('managerTableBody')
        managersData.forEach(manager => {
            const tr = document.createElement('tr')
            tr.innerHTML = `
                <td>${manager.surname} ${manager.name} ${manager.lastname}</td>
                <td>${manager.blocked}</td>
                <td>
                ${manager.blocked === false ?
                `<form action="/api/admin/manager/block/${manager._id}" method="post"><button class="btn btn-danger" type="submit">Block</button></form>` :
                `<form action="/api/admin/manager/unblock/${manager._id}" method="post"><button class="btn btn-success" type="submit">Unblock</button></form>`}
                </td>
            `
            managerTableBody.appendChild(tr)
        })
    }

    async function getTeachers() {
        const response = await axios.get('http://localhost:3000/api/admin/teachers')
        const teachersData = response.data.teachers

        const teacherTableBody = document.getElementById('teacherTableBody')
        teachersData.forEach(teacher => {
            const tr = document.createElement('tr')
            tr.innerHTML = `
                <td>${teacher.surname} ${teacher.name} ${teacher.lastname}</td>
                <td>${teacher.blocked}</td>
                <td>
                ${teacher.blocked === false ?
                `<form action="/api/admin/teacher/block/${teacher._id}" method="post"><button class="btn btn-danger" type="submit">Block</button></form>` :
                `<form action="/api/admin/teacher/unblock/${teacher._id}" method="post"><button class="btn btn-success" type="submit">Unblock</button></form>`}
                </td>
            `
            teacherTableBody.appendChild(tr)
        })
    }

    async function getClasses() {
        const response = await axios.get('http://localhost:3000/api/admin/classes')
        const classesData = response.data.classes

        const studentTableBody = document.getElementById('studentTableBody')
        classesData.forEach(classs => {
            classs.students.forEach(student => {
                const tr = document.createElement('tr')
                tr.innerHTML = `
                    <td>${student.surname} ${student.name} ${student.lastname}</td>
                    <td>${student.blocked}</td>
                    <td>${student.payment}</td>
                    <td>
                    ${student.blocked === false ?
                    `<form action="/api/admin/student/block/${student._id}" method="post"><button class="btn btn-danger" type="submit">Block</button></form>` :
                    `<form action="/api/admin/student/unblock/${student._id}" method="post"><button class="btn btn-success" type="submit">Unblock</button></form>`}
                    </td>
                `
                studentTableBody.appendChild(tr)
            })
        })
    }

    const categorySelect = document.getElementById('categorySelect')
    const statusSelect = document.getElementById('statusSelect')
    const classOptions = document.getElementById('classOptions')
    const managerTable = document.getElementById('managerTable')
    const teacherTable = document.getElementById('teacherTable')
    const studentTable = document.getElementById('studentTable')

    categorySelect.addEventListener('change', function () {
        if (categorySelect.value === 'class') {
            classOptions.style.display = 'block'
            studentTable.style.display = 'block'
            statusSelect.style.display = 'none'
            teacherTable.style.display = 'none'
            managerTable.style.display = 'none'
        } else if (categorySelect.value === 'manager') {
            statusSelect.style.display = 'block'
            managerTable.style.display = 'block'
            classOptions.style.display = 'none'
            studentTable.style.display = 'none'
            teacherTable.style.display = 'none'
        } else {
            statusSelect.style.display = 'block'
            teacherTable.style.display = 'block'
            classOptions.style.display = 'none'
            studentTable.style.display = 'none'
            managerTable.style.display = 'none'
        }
    })

    function reloadPage() {
        location.reload()
    }

    document.addEventListener('DOMContentLoaded', () => {


        getManagers()
        getTeachers()
        getClasses()
    })
</script>
</body>
</html>

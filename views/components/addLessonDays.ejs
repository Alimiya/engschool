<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Lessons</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body class="text-center">
<section class="vh-80">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card shadow-2-strong" style="border-radius: 1rem">
                    <form id="scheduleForm" action="/api/classschedule/add/lessons" method="post" class="card-body p-5 text-center">
                        <h3 class="mb-5">Add Lessons</h3>
                        <div class="mb-3">
                            <label for="classSelect" class="form-label">Select Class:</label>
                            <select class="form-select" id="classSelect" name="classId" required>
                            </select>
                        </div>

                        <div class=" mb-4">
                            <select class="form-select mb-2" id="yearSelect">
                            </select>
                        </div>

                        <div class=" mb-4">
                            <select class="form-select mb-2" id="monthSelect">
                            </select>
                        </div>

                        <div class="d-flex justify-content-around mt-3">
                            <div id="calendar" class="calendar"></div>
                        </div>

                        <input  id="lessonDays" name="lessonDays">
                        <input type="hidden" id="scheduleId" name="classScheduleId">

                        <button type="submit" class="w-100 btn btn-lg btn-primary mb-2">Create</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    async function getClasses() {
        try {
            const response = await axios.get('http://localhost:3000/api/teacher/classes')
            return response.data.classes
        } catch (error) {
            console.error('Error fetching classes:', error)
            return []
        }
    }

    document.addEventListener("DOMContentLoaded", async function () {
        try {
            const classSelect = document.getElementById('classSelect')
            const yearSelect = document.getElementById('yearSelect')
            const monthSelect = document.getElementById('monthSelect')

            const classes = await getClasses()
            classes.forEach(cls => {
                const option = document.createElement('option')
                option.value = cls._id
                option.textContent = cls.name
                classSelect.appendChild(option)
            })

            const uniqueYears = new Set()
            const uniqueMonths = new Set()

            classes.forEach(cls => {
                cls.schedule.forEach(scheduleItem => {
                    uniqueYears.add(scheduleItem.year)
                    uniqueMonths.add(scheduleItem.month)
                })
            })

            uniqueYears.forEach(year => {
                const option = document.createElement('option')
                option.value = year
                option.textContent = year
                yearSelect.appendChild(option)
            })

            uniqueMonths.forEach(month => {
                const option = document.createElement('option')
                option.value = month
                option.textContent = month
                monthSelect.appendChild(option)
            })

            yearSelect.addEventListener('change', updateCalendar)
            monthSelect.addEventListener('change', updateCalendar)
            updateCalendar()

        } catch (error) {
            console.error('Error initializing page:', error)
        }
    })

    async function updateCalendar() {
        const year = document.getElementById('yearSelect').value
        const month = document.getElementById('monthSelect').value
        const classId = document.getElementById('classSelect').value

        if (!year || !month || !classId) {
            return
        }

        try {
            const response = await axios.get(`http://localhost:3000/api/classschedule/${classId}/${year}/${month}`)
            const calendarData = response.data.calendar
            console.log(response.data)
            const newScheduleId = response.data._id

            document.getElementById('scheduleId').value = newScheduleId

            renderCalendar(calendarData)
        } catch (error) {
            console.error('Error fetching class schedule:', error)
        }
    }

    function renderCalendar(calendarData) {
        const calendarElement = document.getElementById('calendar')
        calendarElement.innerHTML = ''

        const daysOfWeek = calendarData.daysOfWeek
        const days = calendarData.days

        const table = document.createElement('table')
        table.classList.add('table')

        const thead = document.createElement('thead')
        const headerRow = document.createElement('tr')
        daysOfWeek.forEach(day => {
            const th = document.createElement('th')
            th.textContent = day
            headerRow.appendChild(th)
        })
        thead.appendChild(headerRow)
        table.appendChild(thead)

        const tbody = document.createElement('tbody')
        days.forEach(week => {
            const weekRow = document.createElement('tr')
            week.forEach(day => {
                const td = document.createElement('td')
                td.textContent = day ? day : ''
                td.classList.add('calendar-day')
                if (day) {
                    td.addEventListener('click', function() {
                        handleCalendarDayClick(td)
                    })
                }
                weekRow.appendChild(td)
            })
            tbody.appendChild(weekRow)
        })
        table.appendChild(tbody)

        calendarElement.appendChild(table)
    }

    function handleCalendarDayClick(td) {
        const lessonDaysInput = document.getElementById('lessonDays')
        const selectedDay = td.textContent.trim()
        let lessonDaysArray = lessonDaysInput.value ? JSON.parse(lessonDaysInput.value) : []

        if (lessonDaysArray.includes(selectedDay)) {
            lessonDaysArray = lessonDaysArray.filter(day => day !== selectedDay)
            lessonDaysInput.value = JSON.stringify(lessonDaysArray)
            td.classList.remove('selected-day')
        } else {
            lessonDaysArray.push(selectedDay)
            lessonDaysInput.value = JSON.stringify(lessonDaysArray)
            td.classList.add('selected-day')
        }
    }
</script>
<style>
    .calendar-day:hover:not(.selected-day) {
        background-color: grey
        cursor: pointer
    }

    .selected-day {
        background-color: lightblue !important
    }
</style>
</style>
</body>
</html>

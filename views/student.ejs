<!DOCTYPE html>
<html lang="kz">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .hidden{
            display: none !important;
        }
        .has-lesson {
            background-color: red !important;
            cursor: pointer
        }
         .lesson-present {
             background-color: green !important
         }
    </style>
</head>
<body>
<%- include('components/header') %>
<div class="container mt-5">
    <div class="card">
        <div class="card-header" data-i18n="personal-info"></div>
        <div class="card-body">
            <div>
                <p class="card-text d-inline" data-i18n="surname"></p><span id="surname" class="d-inline-block"></span>
            </div>
            <div>
                <p class="card-text d-inline" data-i18n="name"></p><span id="name" class="d-inline-block"></span>
            </div>
            <div>
                <p class="card-text d-inline" data-i18n="lastname"></p><span id="lastname" class="d-inline-block"></span>
            </div>
            <div><p class="card-text d-inline" value="classId" data-i18n="class"></p><span id="studentClass" class="d-inline-block"></span></div>
        </div>
    </div>

    <div class="mt-3">
        <select class="form-select mb-2" id="yearSelect">
            <option value="" selected disabled data-i18n="select-year"></option>
        </select>

        <select class="form-select mb-2" id="monthSelect">
            <option value="" selected disabled data-i18n="select-month"></option>
        </select>
    </div>

    <div class="mt-3">
        <div><p class="card-header d-inline mb-2" id="pattendance" data-i18n="attendance"></p><span id="attendance" class="d-inline-block"></span></div>
        <div><p class="card-header d-inline mb-2" id="paid" data-i18n="paid-lessons"></p><span id="payment" class="d-inline-block"></span></div>
        <div><p class="card-header d-inline mb-2" id="teacherValue" data-i18n="teacher"></p><span id="teacher" class="d-inline-block"></span></div>
        <div id="calendar" class="calendar mt-3"></div>
    </div>
</div>
<script type="module" defer>
    import i18n from "/i18n.js"
    document.getElementById('calendar').classList.add('hidden')
    document.getElementById('teacherValue').classList.add('hidden')
    document.getElementById('pattendance').classList.add('hidden')
    document.getElementById('paid').classList.add('hidden')
    function fetchStudentDataAndRenderCalendar() {
        const url = window.location.href
        const {studentId} = extractIdsFromUrl(url)

        axios.get(`http://localhost:3000/api/student/${studentId}`)
            .then(function (response) {
                const student = response.data.student

                document.getElementById('surname').innerText = `${student.surname}`
                document.getElementById('name').innerText = `${student.name}`
                document.getElementById('lastname').innerText = `${student.lastname}`
                document.getElementById('studentClass').innerText = ` ${student.class.name}`
                document.getElementById('studentClass').setAttribute('value', student.class._id)

                const yearsAndMonths = getUniqueYearsAndMonths(student.class.schedule)
                const payments = student.payments
                const paymentsArray = Object.values(payments);
                console.log("paymentsArray", paymentsArray);

                paymentsFunc(paymentsArray);
                renderYearSelect(yearsAndMonths)
            })
            .catch(function (err) {
                console.log(err)
            })
    }

    document.getElementById('yearSelect').addEventListener('change', function (event) {
        const selectedYear = event.target.value
        const selectedMonth = document.getElementById('monthSelect').value
        const studentClassId = document.getElementById('studentClass').getAttribute('value')

        if (selectedYear && selectedMonth) {
            fetchClassCalendarIfSelected(studentClassId, selectedYear, selectedMonth)
            showElements()
        } else {
            hideElements()
        }
    })

    document.getElementById('monthSelect').addEventListener('change', function (event) {
        const selectedMonth = event.target.value
        const selectedYear = document.getElementById('yearSelect').value
        const studentClassId = document.getElementById('studentClass').getAttribute('value')

        if (selectedYear && selectedMonth) {
            fetchClassCalendarIfSelected(studentClassId, selectedYear, selectedMonth)
            showElements()
        } else {
            hideElements()
        }
    })

    function paymentsFunc(payments) {
        const year = document.getElementById('yearSelect').value;
        const month = document.getElementById('monthSelect').value;

        if (!isNaN(year) && !isNaN(month)) {
            return payments.find(payment => payment.year === parseInt(year) && payment.month === parseInt(month));
        } else {
            console.error('Invalid year or month');
            return null;
        }
    }

    function fetchClassCalendarIfSelected(classId, year, month) {
        if (classId && year && month) {
            fetchClassCalendar(classId, year, month)
        } else {
            hideCalendar()
        }
    }

    function hideCalendar() {
        const calendarElement = document.getElementById('calendar')
        calendarElement.innerHTML = ''
    }

    function showElements() {
        document.getElementById('calendar').classList.remove('hidden')
        document.getElementById('teacherValue').classList.remove('hidden')
        document.getElementById('pattendance').classList.remove('hidden')
        document.getElementById('paid').classList.remove('hidden')
    }

    function hideElements() {
        document.getElementById('calendar').classList.add('hidden')
        document.getElementById('teacherValue').classList.add('hidden')
        document.getElementById('pattendance').classList.add('hidden')
        document.getElementById('paid').classList.add('hidden')
    }

    function fetchClassCalendar(classId, year, month) {
        axios.get(`http://localhost:3000/api/classschedule/${classId}/${year}/${month}`)
            .then(function (response) {
                const teacher = response.data.teacher
                const calendarData = response.data.calendar
                const lessons = response.data.lessons
                const lessonDays = response.data.lessonDays
                const lessonspresent = lessons.map(lesson => lesson.day)

                renderCalendar(calendarData, lessons, lessonDays, lessonspresent, teacher)

            })
            .catch(function (err) {
                console.log(err)
            })
    }

    function renderCalendar(calendarData, lessons, lessonDays, lessonspresent, teacher) {
        const payment = paymentsFunc()
        console.log(payment)
        const calendarElement = document.getElementById('calendar')
        calendarElement.innerHTML = ''

        const daysOfWeek = calendarData.daysOfWeek
        const days = calendarData.days

        const table = document.createElement('table')
        table.classList.add('table')

        const thead = document.createElement('thead')
        const headerRow = document.createElement('tr')
        daysOfWeek.forEach(day => {
            const th = document.createElement('th')
            th.textContent = day
            headerRow.appendChild(th)
        })
        thead.appendChild(headerRow)
        table.appendChild(thead)

        const tbody = document.createElement('tbody')
        days.forEach(week => {
            const weekRow = document.createElement('tr')
            week.forEach(day => {
                const td = document.createElement('td')
                td.textContent = day ? day : ''
                td.classList.add('calendar-day')
                if (lessonspresent.includes(day)) {
                    td.classList.add('lesson-present')
                }
                if (lessonDays.includes(day)) {
                    td.classList.add('has-lesson')
                }

                weekRow.appendChild(td)
            })
            tbody.appendChild(weekRow)
        })
        table.appendChild(tbody)

        calendarElement.appendChild(table)
        document.getElementById('attendance').innerText = `${lessons.length}/12`
        document.getElementById('payment').innerText = `${payment}/12`
        document.getElementById('teacher').innerText = `${teacher.surname} ${teacher.name} ${teacher.lastname}`
    }

    function getUniqueYearsAndMonths(schedule) {
        const yearsAndMonths = {}
        schedule.forEach(item => {
            if (!yearsAndMonths[item.year]) {
                yearsAndMonths[item.year] = []
            }
            if (!yearsAndMonths[item.year].includes(item.month)) {
                yearsAndMonths[item.year].push(item.month)
            }
        })
        return yearsAndMonths
    }

    function renderYearSelect(yearsAndMonths) {
        const yearSelect = document.getElementById('yearSelect')
        Object.keys(yearsAndMonths).forEach(year => {
            const option = document.createElement('option')
            option.value = year
            option.innerText = year
            yearSelect.appendChild(option)
        })
        yearSelect.addEventListener('change', function (event) {
            const selectedYear = event.target.value
            const monthSelect = document.getElementById('monthSelect')
            if (selectedYear) {
                yearsAndMonths[selectedYear].forEach(month => {
                    const option = document.createElement('option')
                    option.value = month
                    option.dataset.i18n= month
                    option.innerText = getMonthName(month)
                    monthSelect.appendChild(option)
                })
            }
        })
    }

    function extractIdsFromUrl(url) {
        const segments = url.split("/")
        const studentId = segments[5]
        return {studentId}
    }

    function getMonthName(month) {
        const savedLanguage = localStorage.getItem('language')
        const language = savedLanguage || 'kz'

        const monthElement = document.createElement('option')
        monthElement.value = month
        monthElement.setAttribute('data-i18n', `${month}`)
        if (monthElement) {
            const key = monthElement.getAttribute('data-i18n')
            return i18n[language][key] || ''
        }

        return ''
    }

    fetchStudentDataAndRenderCalendar()
</script>
</body>
</html>
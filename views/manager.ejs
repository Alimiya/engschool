<!DOCTYPE html>
<html lang="kz">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<style>
</style>
<body>
<%- include('components/header') %>
<div class="container mt-4">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title" data-i18n="personal-info"></h5>
            <div>
                <p class="card-text d-inline" data-i18n="surname"></p><span id="surname" class="d-inline-block"></span>
            </div>
            <div>
                <p class="card-text d-inline" data-i18n="name"></p><span id="name" class="d-inline-block"></span>
            </div>
            <div>
                <p class="card-text d-inline" data-i18n="lastname"></p><span id="lastname" class="d-inline-block"></span>
            </div>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title" data-i18n="class-schedule"></h5>
            <div class="row mb-3">
                <div class="col-md-1 mb-1">
                    <select id="classSelect" class="form-select" aria-label="Select Class">
                        <option value="" selected disabled data-i18n="select-class"></option>
                    </select>
                </div>
                <div class="col mx-auto">
                    <select id="yearSelect" class="form-select" aria-label="Select Year">
                        <option value="" selected disabled data-i18n="select-year"></option>
                    </select>
                </div>
                <div class="col mx-auto">
                    <select id="monthSelect" class="form-select" aria-label="Select Month">
                        <option value="" selected disabled data-i18n="select-month">
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="card mt-4" id="classInfoCard" style="display: none">
        <div class="card-body">
            <h5 class="card-title" data-i18n="class-info"></h5>
            <div><p class="card-text d-inline" data-i18n="class-name"></p><span id="className" class="d-inline-block"></span></div>
            <div><p class="card-text d-inline" data-i18n="number-of-lessons"></p><span id="numberOfLessons" class="d-inline-block"></span></div>
            <div><p class="card-text d-inline" data-i18n="lesson-days"></p><span id="lessonDays" class="d-inline-block"></span></div>
            <div><p class="card-text d-inline" data-i18n="teacher"></p><span id="teacher" class="d-inline-block"></span></div>
            <h5 class="card-title mt-3" data-i18n="students"></h5>
            <ul id="studentsList"></ul>
            <div id="studentDetails" style="display: none;">
                <div><p class="card-text d-inline" data-i18n="full-name"></p><span id="fullNameStudent" class="d-inline-block"></span></div>
                <div><p class="card-text d-inline" data-i18n="lessons-attended"></p><span id="lessonsAttendedStudent" class="d-inline-block"></span></div>
                <div><p class="card-text d-inline" data-i18n="days-attended"></p><span id="daysAttendedStudent" class="d-inline-block"></span></div>
                <div><p class="card-text d-inline" data-i18n="payment"></p><span id="paymentStudent" class="d-inline-block"></span></div>
            </div>
        </div>
    </div>
</div>
<script type="module" defer>
    import i18n from "/i18n.js"
    function fetchManagerDataAndRenderCalendar() {
        const url = window.location.href
        const {managerId} = extractIdsFromUrl(url)

        const classSelect = document.getElementById('classSelect')
        const yearSelect = document.getElementById('yearSelect')
        const monthSelect = document.getElementById('monthSelect')

        axios.get(`https://sch-eng.live/api/manager/${managerId}`)
            .then(function (response) {
                const manager = response.data.manager
                document.getElementById('surname').innerText = manager.surname
                document.getElementById('name').innerText = manager.name
                document.getElementById('lastname').innerText = manager.lastname

                const managerClasses = manager.classes
                managerClasses.forEach(cls => {
                    const option = document.createElement('option')
                    option.value = cls._id
                    option.innerText = cls.name
                    classSelect.appendChild(option)
                })

                const yearsAndMonths = getUniqueYearsAndMonthsForManager(managerClasses)
                renderYearAndMonthSelect(yearsAndMonths)
            })
            .catch(function (error) {
                console.error('Error fetching manager data:', error)
            })
    }

    function getUniqueYearsAndMonthsForManager(classes) {
        const yearsAndMonths = {}
        classes.forEach(cls => {
            cls.schedule.forEach(scheduleItem => {
                if (!yearsAndMonths[scheduleItem.year]) {
                    yearsAndMonths[scheduleItem.year] = []
                }
                if (!yearsAndMonths[scheduleItem.year].includes(scheduleItem.month)) {
                    yearsAndMonths[scheduleItem.year].push(scheduleItem.month)
                }
            })
        })
        return yearsAndMonths
    }

    function renderYearAndMonthSelect(yearsAndMonths) {
        const yearSelect = document.getElementById('yearSelect')
        Object.keys(yearsAndMonths).forEach(year => {
            const option = document.createElement('option')
            option.value = year
            option.innerText = year
            yearSelect.appendChild(option)
        })
        yearSelect.addEventListener('change', function (event) {
            const selectedYear = event.target.value
            const monthSelect = document.getElementById('monthSelect')
            if (selectedYear) {
                yearsAndMonths[selectedYear].forEach(month => {
                    const option = document.createElement('option')
                    option.value = month
                    option.dataset.i18n = month
                    option.innerText = getMonthName(month)
                    monthSelect.appendChild(option)
                })
            }
        })
    }

    document.getElementById('classSelect').addEventListener('change', function (event) {
        const selectedClassId = event.target.value
        const selectedYear = document.getElementById('yearSelect').value
        const selectedMonth = document.getElementById('monthSelect').value

        fetchClassInfo(selectedClassId, selectedYear, selectedMonth)
    })

    document.getElementById('yearSelect').addEventListener('change', function (event) {
        const selectedYear = event.target.value
        const selectedMonth = document.getElementById('monthSelect').value
        const selectedClassId = document.getElementById('classSelect').value

        fetchClassInfo(selectedClassId, selectedYear, selectedMonth)
    })

    document.getElementById('monthSelect').addEventListener('change', function (event) {
        const selectedMonth = event.target.value
        const selectedYear = document.getElementById('yearSelect').value
        const selectedClassId = document.getElementById('classSelect').value

        fetchClassInfo(selectedClassId, selectedYear, selectedMonth)
    })

    function fetchClassInfo(classId, year, month) {
        axios.get(`https://sch-eng.live/api/manager/class/${classId}`)
            .then(function (response) {
                const classInfo = response.data.classInfo
                const selectedSchedule = classInfo.schedule.find(schedule => schedule.year == year && schedule.month == month)
                if (selectedSchedule) {
                    let lastSelectedItem = null
                    document.getElementById('className').innerText = classInfo.name
                    document.getElementById('numberOfLessons').innerText = selectedSchedule.numberOfLessons
                    document.getElementById('lessonDays').innerText = selectedSchedule.lessonDays
                    document.getElementById('teacher').innerText = `${classInfo.teacher.surname} ${classInfo.teacher.name} ${classInfo.teacher.lastname}`
                    const studentsList = document.getElementById('studentsList')
                    studentsList.innerHTML = ''

                    classInfo.students.forEach(student => {
                        const listItem = document.createElement('li')
                        const lessonsCount = student.lessons.filter(lesson => lesson.month == month).length
                        const paymentForMonth = student.payments.find(payment => payment.year == year && payment.month == month)
                        const daysAttended = student.lessons.filter(lesson => lesson.month == month && lesson.year == year).map(lesson => lesson.day)

                        listItem.innerText = `${student.surname} ${student.name.charAt(0)}. ${student.lastname.charAt(0)}. - ${lessonsCount}/${selectedSchedule.numberOfLessons}`
                        listItem.classList.add('student-item')
                        listItem.style.color = 'blue'
                        listItem.style.textDecoration = 'underline'

                        const payButton = document.createElement('button')
                        payButton.innerText = 'Pay'
                        payButton.classList.add('btn', 'btn-primary', 'mb-1')
                        payButton.setAttribute('data-i18n', 'pay-button')

                        const space = document.createElement('span')
                        space.innerText = ' '

                        listItem.addEventListener('click', () => {
                            if (lastSelectedItem) {
                                lastSelectedItem.style.color = 'blue'
                            }
                            listItem.style.color = 'red'
                            lastSelectedItem = listItem
                            displayStudentDetails(student, lessonsCount, paymentForMonth, daysAttended, month, year, selectedSchedule)
                        })
                        if (paymentForMonth && paymentForMonth.payment === true) {
                            payButton.style.display = 'none'
                        } else {
                            payButton.addEventListener('click', (event) => {
                                event.stopPropagation()
                                axios.post(`https://sch-eng.live/api/manager/${student._id}/${year}/${month}`)
                                    .then(response => {
                                        window.location.reload()
                                    })
                                    .catch(err => {
                                        console.log(err)
                                    })
                            })
                        }
                        listItem.appendChild(space)
                        listItem.appendChild(payButton)
                        studentsList.appendChild(listItem)
                    })
                    document.getElementById('classInfoCard').style.display = 'block'
                } else {
                    document.getElementById('classInfoCard').style.display = 'none'
                }
            })
            .catch(function (error) {
                console.error('Error fetching class info:', error)
            })
    }

    function displayStudentDetails(student, lessonsCount, paymentForMonth, daysAttended, month, year, selectedSchedule) {
        const studentDetails = document.getElementById('studentDetails')
        studentDetails.style.display = 'block'
        document.getElementById('fullNameStudent').innerText = `: ${student.surname} ${student.name} ${student.lastname}`
        document.getElementById('lessonsAttendedStudent').innerText = `: ${lessonsCount}/${selectedSchedule.numberOfLessons}`
        document.getElementById('daysAttendedStudent').innerText = `: ${daysAttended.join(', ')}`
        document.getElementById('paymentStudent').innerText = `: ${paymentForMonth ? paymentForMonth.payment : 'false'}`    }

    function extractIdsFromUrl(url) {
        const segments = url.split('/')
        const managerId = segments[5]
        return {managerId}
    }

    function getMonthName(month) {
        const savedLanguage = localStorage.getItem('language')
        const language = savedLanguage || 'kz'

        const monthElement = document.createElement('option')
        monthElement.value = month
        monthElement.setAttribute('data-i18n', `${month}`)
        if (monthElement) {
            const key = monthElement.getAttribute('data-i18n')
            return i18n[language][key] || ''
        }

        return ''
    }

    document.addEventListener('DOMContentLoaded', () => {
        fetchManagerDataAndRenderCalendar()
    })

</script>


</body>
</html>
